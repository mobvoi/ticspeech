// Copyright 2018 Mobvoi Inc. All Rights Reserved.
// Author: mingzou@mobvoi.com (Ming Zou)

syntax = "proto2";

package mobvoi;

message KenLMConfig {
  optional int32 ngram_order = 1 [default = 4];
  optional string model_path = 2;
  // file generated by kenlm_vocab_relabel_main and then relabel_convert_tool
  optional string relabel_file_path = 3;
  optional float weight = 4 [default = 1.0];
  optional string name = 5;
  optional string group = 6;
}

// Reference: Aleksic et al.
// Bringing Contextual Information to Google Speech Recognition
message ContextScoringFunctionConfig {
  // true for length-linear, false for unigram-bigram
  optional AppContextScoringFunctionConfig app_context = 1;
  optional QueryContextScoringFunctionConfig query_context = 2;
  optional QueryContextScoringFunctionConfig class_context = 3;
}

message AppContextScoringFunctionConfig {
  // default true for length-linear
  optional bool length_linear = 1 [default = true];
  // formula : C(sG(w|H), sB(w|H)) = α∗sG(w|H)+β∗sB(w|H).
  // length-linear biasing: sB(w|H) = f1(length(Hw)) = (n − 1)p2 + p1
  optional float alpha = 2 [default = 0.9];
  optional float beta = 3 [default = 1.0];
  optional float p1 = 4 [default = 0.0];
  optional float p2 = 5 [default = -1.5];
  optional bool full_match = 6 [default = false];
  optional float length_pow = 7 [default = 1];
  optional int32 min_length = 8 [default = 1];
  optional bool look_ahead = 9 [default = false];
}

message QueryContextScoringFunctionConfig {
  // default false for unigram-bigram
  optional bool length_linear = 1 [default = false];
  // unigram-bigram biasing:
  // sB(w|H) = f2(length(Hw)) = (n== 1) ? p1 : p2
  optional float alpha = 2 [default = 0.8];
  optional float beta = 3 [default = 1];
  optional float p1 = 4 [default = -1];
  optional float p2 = 5 [default = -2];
  optional bool full_match = 6 [default = false];
  optional float length_pow = 7 [default = 1];
  optional int32 min_length = 8 [default = 1];
  optional bool look_ahead = 9 [default = false];
}

message BaseScoringFunctionConfig {
  // We got a base score per rescorer. The first weight is the sum
  // of the weights, it should be always set as 1.0 for poi scenario.
  // More or less, it acts as a placeholder for the moment.
  // And the additional weights are for the extra rescorers
  // such as poi online rescorer per area.
  repeated float weight = 1;
}

message LMRescorerConfig {
  required string model_type = 1;  // KenLMRescorer etc.
  repeated KenLMConfig kenlm_config = 2;
  optional string homophone_path = 3;
  optional ContextScoringFunctionConfig function_config = 4;
  optional BaseScoringFunctionConfig base_score_config = 5;
  optional int32 epoch = 6 [default = 1];  // Denote the config file version.
}

